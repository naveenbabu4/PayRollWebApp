{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SAGOSANG/Desktop/PayrollManagementSystemWeb/PayrollManagementSystemWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport { baseURL } from '../shared/baseurl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./process-httpmsg.service\";\nexport class LoginService {\n  constructor(http, processHTTPMsgService) {\n    this.http = http;\n    this.processHTTPMsgService = processHTTPMsgService;\n  }\n  sendLoginUser(login) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return _this.http.post(baseURL + 'LoginController/LoginUser', login, httpOptions).pipe(catchError(_this.processHTTPMsgService.handleError));\n    })();\n  }\n  changePassword(changePassword) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return _this2.http.post(baseURL + 'LoginController/ChangePassword', changePassword, httpOptions).pipe(catchError(_this2.processHTTPMsgService.handleError));\n    })();\n  }\n}\n_class = LoginService;\n_class.ɵfac = function LoginService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProcessHTTPMsgService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","catchError","baseURL","LoginService","constructor","http","processHTTPMsgService","sendLoginUser","login","_this","_asyncToGenerator","httpOptions","headers","post","pipe","handleError","changePassword","_this2","i0","ɵɵinject","i1","HttpClient","i2","ProcessHTTPMsgService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SAGOSANG\\Desktop\\PayrollManagementSystemWeb\\PayrollManagementSystemWeb\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { catchError, Observable,map } from 'rxjs';\r\nimport { HttpClient} from '@angular/common/http'\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { Login } from '../models/login.model';\r\nimport { ChangePassword } from '../models/change-password.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private http:HttpClient,\r\n    private processHTTPMsgService : ProcessHTTPMsgService) {\r\n\r\n     }\r\n     async sendLoginUser(login: Login): Promise<Observable<Login>> {\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type':  'application/json'\r\n        })\r\n      };\r\n      return this.http.post<Login>(baseURL + 'LoginController/LoginUser',login, httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError));\r\n    }\r\n    async changePassword(changePassword: ChangePassword): Promise<Observable<ChangePassword>> {\r\n      const httpOptions = {\r\n        headers: new HttpHeaders({\r\n          'Content-Type':  'application/json'\r\n        })\r\n      };\r\n      return this.http.post<ChangePassword>(baseURL + 'LoginController/ChangePassword',changePassword, httpOptions)\r\n        .pipe(catchError(this.processHTTPMsgService.handleError));\r\n    }\r\n}\r\n"],"mappings":";;AACA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,QAAwB,MAAM;AAEjD,SAASC,OAAO,QAAQ,mBAAmB;;;;AAO3C,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,IAAe,EACzBC,qBAA6C;IADnC,KAAAD,IAAI,GAAJA,IAAI;IACd,KAAAC,qBAAqB,GAArBA,qBAAqB;EAE5B;EACMC,aAAaA,CAACC,KAAY;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC/B,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;UACvB,cAAc,EAAG;SAClB;OACF;MACD,OAAOS,KAAI,CAACJ,IAAI,CAACQ,IAAI,CAAQX,OAAO,GAAG,2BAA2B,EAACM,KAAK,EAAEG,WAAW,CAAC,CACnFG,IAAI,CAACb,UAAU,CAACQ,KAAI,CAACH,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC9D;EACMC,cAAcA,CAACA,cAA8B;IAAA,IAAAC,MAAA;IAAA,OAAAP,iBAAA;MACjD,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAE,IAAIZ,WAAW,CAAC;UACvB,cAAc,EAAG;SAClB;OACF;MACD,OAAOiB,MAAI,CAACZ,IAAI,CAACQ,IAAI,CAAiBX,OAAO,GAAG,gCAAgC,EAACc,cAAc,EAAEL,WAAW,CAAC,CAC1GG,IAAI,CAACb,UAAU,CAACgB,MAAI,CAACX,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC9D;;SAvBSZ,YAAY;;mBAAZA,MAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,qBAAA;AAAA;;SAAZpB,MAAY;EAAAqB,OAAA,EAAZrB,MAAY,CAAAsB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}