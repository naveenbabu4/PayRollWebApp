{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/SAGOSANG/Desktop/PayrollManagementSystemWeb/PayrollManagementSystemWeb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError, map } from 'rxjs';\nimport { baseURL } from '../shared/baseurl';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./process-httpmsg.service\";\nexport class EmployeeService {\n  constructor(http, processHTTPMsgService) {\n    this.http = http;\n    this.processHTTPMsgService = processHTTPMsgService;\n  }\n  ApplyLeave(applyLeave) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      return _this.http.post(baseURL + 'EmployeeController/ApplyLeave', applyLeave, httpOptions).pipe(catchError(_this.processHTTPMsgService.handleError));\n    })();\n  }\n  GetEmployeeById(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.http.get(baseURL + \"EmployeeController/GetEmployeeById\").pipe(catchError(_this2.processHTTPMsgService.handleError));\n    })();\n  }\n  GetLeaves() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.http.get(baseURL + \"\").pipe(map(users => users)).pipe(catchError(_this3.processHTTPMsgService.handleError));\n    })();\n  }\n  GetSalaryDetails() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.http.get(baseURL + \"\").pipe(map(users => users)).pipe(catchError(_this4.processHTTPMsgService.handleError));\n    })();\n  }\n}\n_class = EmployeeService;\n_class.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProcessHTTPMsgService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","catchError","map","baseURL","EmployeeService","constructor","http","processHTTPMsgService","ApplyLeave","applyLeave","_this","_asyncToGenerator","httpOptions","headers","post","pipe","handleError","GetEmployeeById","id","_this2","get","GetLeaves","_this3","users","GetSalaryDetails","_this4","i0","ɵɵinject","i1","HttpClient","i2","ProcessHTTPMsgService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\SAGOSANG\\Desktop\\PayrollManagementSystemWeb\\PayrollManagementSystemWeb\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { catchError, Observable,map } from 'rxjs';\r\nimport { HttpClient} from '@angular/common/http'\r\nimport { baseURL } from '../shared/baseurl';\r\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\r\nimport { UserViewModel } from '../models/user.model';\r\nimport { ApplyLeave } from '../models/apply-leave.model';\r\nimport { AddSalary } from '../models/add-salary.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private http:HttpClient,private processHTTPMsgService : ProcessHTTPMsgService) { }\r\n\r\n  async ApplyLeave(applyLeave: ApplyLeave):Promise<Observable<ApplyLeave>> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json'\r\n      })\r\n    };\r\n    return this.http.post<ApplyLeave>(baseURL + 'EmployeeController/ApplyLeave',applyLeave, httpOptions)\r\n      .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n<<<<<<< HEAD\r\n  async GetEmployeeById(id : string | null):Promise<Observable<UserViewModel>>{\r\n    return this.http.get<UserViewModel>(baseURL + \"EmployeeController/GetEmployeeById\")\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  async GetLeaves():Promise<Observable<ApplyLeave>>{\r\n    return this.http.get<ApplyLeave>(baseURL + \"\")\r\n=======\r\n  async GetEmployeeById(id : string):Promise<Observable<UserViewModel>>{\r\n    return this.http.get<UserViewModel>(baseURL + \"EmployeeController/GetEmployeeById/\"+id)\r\n>>>>>>> 8d9607005c715c0ab82c2fc31fdac783ad94430b\r\n    .pipe(map(users => users))\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n\r\n  async GetSalaryDetails():Promise<Observable<AddSalary>>{\r\n    return this.http.get<AddSalary>(baseURL + \"\")\r\n    .pipe(map(users => users))\r\n    .pipe(catchError(this.processHTTPMsgService.handleError));\r\n  }\r\n  \r\n}\r\n"],"mappings":";;AACA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,EAAaC,GAAG,QAAQ,MAAM;AAEjD,SAASC,OAAO,QAAQ,mBAAmB;;;;AAQ3C,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAe,EAASC,qBAA6C;IAArE,KAAAD,IAAI,GAAJA,IAAI;IAAoB,KAAAC,qBAAqB,GAArBA,qBAAqB;EAA4B;EAEvFC,UAAUA,CAACC,UAAsB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrC,MAAMC,WAAW,GAAG;QAClBC,OAAO,EAAE,IAAIb,WAAW,CAAC;UACvB,cAAc,EAAG;SAClB;OACF;MACD,OAAOU,KAAI,CAACJ,IAAI,CAACQ,IAAI,CAAaX,OAAO,GAAG,+BAA+B,EAACM,UAAU,EAAEG,WAAW,CAAC,CACjGG,IAAI,CAACd,UAAU,CAACS,KAAI,CAACH,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC9D;EAGMC,eAAeA,CAACC,EAAkB;IAAA,IAAAC,MAAA;IAAA,OAAAR,iBAAA;MACtC,OAAOQ,MAAI,CAACb,IAAI,CAACc,GAAG,CAAgBjB,OAAO,GAAG,oCAAoC,CAAC,CAClFY,IAAI,CAACd,UAAU,CAACkB,MAAI,CAACZ,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC5D;EAEMK,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAX,iBAAA;MACb,OAAOW,MAAI,CAAChB,IAAI,CAACc,GAAG,CAAajB,OAAO,GAAG,EAAE,CAAC,CAK7CY,IAAI,CAACb,GAAG,CAACqB,KAAK,IAAIA,KAAK,CAAC,CAAC,CACzBR,IAAI,CAACd,UAAU,CAACqB,MAAI,CAACf,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC5D;EAEMQ,gBAAgBA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MACpB,OAAOc,MAAI,CAACnB,IAAI,CAACc,GAAG,CAAYjB,OAAO,GAAG,EAAE,CAAC,CAC5CY,IAAI,CAACb,GAAG,CAACqB,KAAK,IAAIA,KAAK,CAAC,CAAC,CACzBR,IAAI,CAACd,UAAU,CAACwB,MAAI,CAAClB,qBAAqB,CAACS,WAAW,CAAC,CAAC;IAAC;EAC5D;;SAlCWZ,eAAe;;mBAAfA,MAAe,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,qBAAA;AAAA;;SAAf3B,MAAe;EAAA4B,OAAA,EAAf5B,MAAe,CAAA6B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}